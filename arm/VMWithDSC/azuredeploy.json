{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters":
	{
		"subscriptionId":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"location":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},

		"availabilitySetName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"resourceGroupNameVM":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"virtualMachineName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"virtualMachineSize":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"adminUsername":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"adminPassword":
		{
			"type": "securestring",
			"metadata":
			{
				"description": ""
			}
		},

		"osDiskStorageType":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"osDiskName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},

		"dataDiskStorageType":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"dataDiskCount":
		{
			"type": "int",
			"metadata":
			{
				"description": ""
			}
		},
		"dataDiskSizeInGB":
		{
			"type": "int",
			"metadata":
			{
				"description": ""
			}
		},
		"dataDiskNamePrefix":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},

		"networkInterfaceName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"publicIpAddressName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"publicIpAddressType":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"publicIpAddressSku":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},

		"resourceGroupNameNetwork":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"virtualNetworkName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"subnetName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"networkSecurityGroupName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},

		"resourceGroupNameDiagnostics":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		},
		"diagnosticsStorageAccountName":
		{
			"type": "string",
			"metadata":
			{
				"description": ""
			}
		}
	},
	"variables":
	{
		"vnetId": "[resourceId(parameters('resourceGroupNameNetwork'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
		"subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
		"diagnosticsStorageAccountId": "[concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupNameDiagnostics'), '/providers/Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]",
		"diagnosticsExtensionName": "IaaSDiagnostics"
	},
	"resources":
	[
		{
			"type": "Microsoft.Compute/availabilitySets",
			"sku":
			{
				"name": "Aligned"
			},
			"name": "[parameters('availabilitySetName')]",
			"apiVersion": "2017-03-30",
			"location": "[parameters('location')]",
			"scale": null,
			"properties":
			{
				"platformUpdateDomainCount": 5,
				"platformFaultDomainCount": 3,
				"virtualMachines":
				[
				]
			},
			"dependsOn":
			[
			]
		},
		{
			"name": "[parameters('virtualMachineName')]",
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2017-03-30",
			"location": "[parameters('location')]",
			"dependsOn":
			[
				"[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
			],
			"properties":
			{
				"availabilitySet":
				{
					"id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
				},
				"osProfile":
				{
					"computerName": "[parameters('virtualMachineName')]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]",
					"windowsConfiguration":
					{
						"provisionVmAgent": "true"
					}
				},
				"hardwareProfile":
				{
					"vmSize": "[parameters('virtualMachineSize')]"
				},
				"storageProfile":
				{
					"imageReference":
					{
						"publisher": "MicrosoftWindowsServer",
						"offer": "WindowsServer",
						"sku": "2016-Datacenter",
						"version": "latest"
					},
					"osDisk":
					{
						"createOption": "FromImage",
						"name": "[parameters('osDiskName')]",
						"managedDisk":
						{
							"storageAccountType": "[parameters('osDiskStorageType')]"
						}
					},
					"copy":
					[
						{
							"name": "dataDisks",
							"count": "[parameters('dataDiskCount')]",
							"input":
							{
								"lun": "[copyIndex('dataDisks')]",
								"createOption": "Empty",
								"name": "[concat(parameters('dataDiskNamePrefix'), copyIndex('dataDisks'))]",
								"diskSizeGB": "[parameters('dataDiskSizeInGB')]",
								"managedDisk":
								{
									"storageAccountType": "[parameters('dataDiskStorageType')]"
								}
							}
						}
					]
				},
				"networkProfile":
				{
					"networkInterfaces":
					[
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
						}
					]
				},
				"diagnosticsProfile":
				{
					"bootDiagnostics":
					{
						"enabled": true,
						"storageUri": "[reference(resourceId(parameters('resourceGroupNameDiagnostics'), 'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
					}
				}
			},
			"resources":
			[
				{
					"name": "Microsoft.Powershell.DSC",
					"type": "extensions",
					"location": "[resourceGroup().location]",
					"apiVersion": "2016-03-30",
					"dependsOn":
					[
						"[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
					],
					"tags":
					{
						"displayName": "dscExt"
					},
					"properties":
					{
						"publisher": "Microsoft.Powershell",
						"type": "DSC",
						"typeHandlerVersion": "2.9",
						"autoUpgradeMinorVersion": true,
						"settings":
						{
							"configuration":
							{
								"url": "[concat(parameters('_artifactsLocation'), '/', variables('dscExtArchiveFolder'), '/', variables('dscExtArchiveFileName'))]",
								"script": "dscExt.ps1",
								"function": "Main"
							},
							"configurationArguments":
							{
								"nodeName": "[parameters('virtualMachineName')]"
							}
						},
						"protectedSettings":
						{
							"configurationUrlSasToken": "[parameters('_artifactsLocationSasToken')]"
						}
					}
				}
			]
		},
		{
			"name": "[concat(parameters('virtualMachineName'),'/', variables('diagnosticsExtensionName'))]",
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"apiVersion": "2016-04-30-preview",
			"location": "[parameters('location')]",
			"dependsOn":
			[
				"[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
			],
			"properties":
			{
				"publisher": "Microsoft.Azure.Diagnostics",
				"type": "IaaSDiagnostics",
				"typeHandlerVersion": "1.5",
				"autoUpgradeMinorVersion": true,
				"settings":
				{
					"StorageAccount": "[parameters('diagnosticsStorageAccountName')]",
					"WadCfg":
					{
						"DiagnosticMonitorConfiguration":
						{
							"overallQuotaInMB": 5120,
							"Metrics":
							{
								"resourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/', 'Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]",
								"MetricAggregation":
								[
									{
										"scheduledTransferPeriod": "PT1H"
									},
									{
										"scheduledTransferPeriod": "PT1M"
									}
								]
							},
							"DiagnosticInfrastructureLogs":
							{
								"scheduledTransferLogLevelFilter": "Error"
							},
							"PerformanceCounters":
							{
								"scheduledTransferPeriod": "PT1M",
								"PerformanceCounterConfiguration":
								[
									{
										"counterSpecifier": "\\Processor Information(_Total)\\% Processor Time",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Processor Information(_Total)\\% Privileged Time",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Processor Information(_Total)\\% User Time",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Processor Information(_Total)\\Processor Frequency",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\System\\Processes",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Process(_Total)\\Thread Count",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Process(_Total)\\Handle Count",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\System\\System Up Time",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\System\\Context Switches/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\System\\Processor Queue Length",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Memory\\% Committed Bytes In Use",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Memory\\Available Bytes",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Memory\\Committed Bytes",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Memory\\Cache Bytes",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Memory\\Pool Paged Bytes",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Memory\\Pool Nonpaged Bytes",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Memory\\Pages/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Memory\\Page Faults/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Process(_Total)\\Working Set",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Process(_Total)\\Working Set - Private",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Time",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Read Time",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\% Disk Write Time",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\% Idle Time",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Disk Bytes/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Disk Read Bytes/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Disk Write Bytes/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Disk Transfers/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Disk Reads/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Disk Writes/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Transfer",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Read",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk sec/Write",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Queue Length",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Read Queue Length",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Avg. Disk Write Queue Length",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\% Free Space",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\LogicalDisk(_Total)\\Free Megabytes",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Network Interface(*)\\Bytes Total/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Network Interface(*)\\Bytes Sent/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Network Interface(*)\\Bytes Received/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Network Interface(*)\\Packets/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Network Interface(*)\\Packets Sent/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Network Interface(*)\\Packets Received/sec",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Network Interface(*)\\Packets Outbound Errors",
										"sampleRate": "PT1M"
									},
									{
										"counterSpecifier": "\\Network Interface(*)\\Packets Received Errors",
										"sampleRate": "PT1M"
									}
								]
							},
							"WindowsEventLog":
							{
								"scheduledTransferPeriod": "PT1M",
								"DataSource":
								[
									{
										"name": "Application!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
									},
									{
										"name": "Security!*[System[band(Keywords,4503599627370496)]]"
									},
									{
										"name": "System!*[System[(Level = 1 or Level = 2 or Level = 3)]]"
									}
								]
							}
						}
					}
				},
				"protectedSettings":
				{
					"storageAccountName": "[parameters('diagnosticsStorageAccountName')]",
					"storageAccountKey": "[listKeys(variables('diagnosticsStorageAccountId'),'2015-06-15').key1]",
					"storageAccountEndPoint": "https://core.windows.net/"
				}
			}
		},
		{
			"name": "microsoft.antimalware-windows-20171206140853",
			"apiVersion": "2015-01-01",
			"type": "Microsoft.Resources/deployments",
			"properties":
			{
				"mode": "Incremental",
				"templateLink":
				{
					"uri": "https://gallery.azure.com/artifact/20161101/microsoft.antimalware-windows-arm.1.0.0/Artifacts/MainTemplate.json"
				},
				"parameters":
				{
					"vmName":
					{
						"value": "[parameters('virtualMachineName')]"
					},
					"location":
					{
						"value": "[parameters('location')]"
					},
					"RealtimeProtectionEnabled":
					{
						"value": "true"
					},
					"ScheduledScanSettingsIsEnabled":
					{
						"value": "false"
					},
					"ScheduledScanSettingsScanType":
					{
						"value": "Quick"
					},
					"ScheduledScanSettingsDay":
					{
						"value": "7"
					},
					"ScheduledScanSettingsTime":
					{
						"value": "120"
					}
				}
			},
			"dependsOn":
			[
				"[concat('Microsoft.Compute/virtualMachines/',parameters('virtualMachineName'),'/extensions/', variables('diagnosticsExtensionName'))]"
			]
		},
		{
			"name": "[parameters('networkInterfaceName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2016-09-01",
			"location": "[parameters('location')]",
			"dependsOn":
			[
				"[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
			],
			"properties":
			{
				"ipConfigurations":
				[
					{
						"name": "ipconfig1",
						"properties":
						{
							"subnet":
							{
								"id": "[variables('subnetRef')]"
							},
							"privateIPAllocationMethod": "Dynamic",
							"publicIpAddress":
							{
								"id": "[resourceId(parameters('resourceGroupNameVM'), 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
							}
						}
					}
				],
				"networkSecurityGroup":
				{
					"id": "[resourceId(parameters('resourceGroupNameNetwork'), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
				}
			}
		},
		{
			"name": "[parameters('publicIpAddressName')]",
			"type": "Microsoft.Network/publicIpAddresses",
			"apiVersion": "2017-08-01",
			"location": "[parameters('location')]",
			"properties":
			{
				"publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
			},
			"sku":
			{
				"name": "[parameters('publicIpAddressSku')]"
			}
		}
	],
	"outputs":
	{
		"adminUsername":
		{
			"type": "string",
			"value": "[parameters('adminUsername')]"
		}
	}
}